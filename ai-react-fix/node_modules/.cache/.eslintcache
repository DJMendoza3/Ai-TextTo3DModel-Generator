[{"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/index.js":"1","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/reportWebVitals.js":"2","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Container.jsx":"3","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/redux/store.js":"4","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Switch.jsx":"5","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/FlexRow.jsx":"6","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Aside.jsx":"7","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Topbar.jsx":"8","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Main.jsx":"9","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/navbar/Navbar.jsx":"10","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/features/Header.jsx":"11","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/redux/slices/navSlice.js":"12","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/redux/slices/homeSlice.js":"13","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/pages/home/Home.jsx":"14","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/NavLink.jsx":"15","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ToggleButton.jsx":"16","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/pages/home/Prompt.jsx":"17","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/features/GeneratorSettings.jsx":"18","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/FlexColumn.jsx":"19","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ModelViewer.jsx":"20","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/Slider.jsx":"21","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/utils/globalVariables.js":"22"},{"size":682,"mtime":1674497468920,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1674494818629,"results":"25","hashOfConfig":"24"},{"size":2197,"mtime":1674954210736,"results":"26","hashOfConfig":"24"},{"size":249,"mtime":1674500200752,"results":"27","hashOfConfig":"24"},{"size":505,"mtime":1674499586530,"results":"28","hashOfConfig":"24"},{"size":410,"mtime":1674509426550,"results":"29","hashOfConfig":"24"},{"size":515,"mtime":1674506914124,"results":"30","hashOfConfig":"24"},{"size":289,"mtime":1674508573039,"results":"31","hashOfConfig":"24"},{"size":184,"mtime":1674504846177,"results":"32","hashOfConfig":"24"},{"size":1790,"mtime":1674940652186,"results":"33","hashOfConfig":"24"},{"size":1055,"mtime":1675113462220,"results":"34","hashOfConfig":"24"},{"size":903,"mtime":1674940589816,"results":"35","hashOfConfig":"24"},{"size":1805,"mtime":1675115582773,"results":"36","hashOfConfig":"24"},{"size":1773,"mtime":1675102257034,"results":"37","hashOfConfig":"24"},{"size":580,"mtime":1674852240031,"results":"38","hashOfConfig":"24"},{"size":645,"mtime":1675119022071,"results":"39","hashOfConfig":"24"},{"size":3326,"mtime":1675118751528,"results":"40","hashOfConfig":"24"},{"size":1387,"mtime":1675108939799,"results":"41","hashOfConfig":"24"},{"size":603,"mtime":1674842662398,"results":"42","hashOfConfig":"24"},{"size":5492,"mtime":1675117394244,"results":"43","hashOfConfig":"24"},{"size":4361,"mtime":1674936588348,"results":"44","hashOfConfig":"24"},{"size":51,"mtime":1674841119295,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"ief4ud",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"49"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/index.js",[],[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/reportWebVitals.js",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Container.jsx",["116","117"],[],"import { useEffect, useLayoutEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { TOGGLE_SETTINGS } from \"redux/slices/homeSlice\";\nimport { TOGGLE_WIDTH } from \"redux/slices/navSlice\";\n\nimport Topbar from \"layout/Topbar\";\nimport Header from \"features/Header\";\nimport Navbar from \"layout/navbar/Navbar\";\nimport FlexRow from \"layout/FlexRow\";\nimport Main from \"layout/Main\";\nimport Aside from \"layout/Aside\";\nimport Switch from \"./Switch\";\n\nimport styles from \"layout/layout.module.css\";\n\nexport default function Container() {\n    const dispatch = useDispatch();\n    let device = 'desktop';\n\n    useLayoutEffect(() => {\n        //check window size on initial page load\n        if (window.innerWidth < 1000 && device === 'desktop') {\n            dispatch(TOGGLE_WIDTH('mobile'));\n            dispatch(TOGGLE_SETTINGS('mobile'));\n            console.log('mobile switch');\n            device = 'mobile';\n        } else if (window.innerWidth > 1000 && device === 'mobile') {\n            dispatch(TOGGLE_WIDTH('desktop'));\n            dispatch(TOGGLE_SETTINGS('desktop'));\n            console.log('desktop switch');\n            device = 'desktop';\n        }\n    }, []);\n\n    useEffect(() => {\n         //check window size on resize\n        window.addEventListener('resize', () => {\n            if (window.innerWidth < 1000 && device === 'desktop') {\n                dispatch(TOGGLE_WIDTH('mobile'));\n                dispatch(TOGGLE_SETTINGS('mobile'));\n                console.log('mobile switch');\n                device = 'mobile';\n            } else if (window.innerWidth > 1000 && device === 'mobile') {\n                dispatch(TOGGLE_WIDTH('desktop'));\n                dispatch(TOGGLE_SETTINGS('desktop'));\n                console.log('desktop switch');\n                device = 'desktop';\n            }\n        });\n    }, []);\n\n    return (\n        <div id={styles[\"container\"]}>\n            <Topbar>\n                <Header/>\n            </Topbar>\n            <FlexRow>\n                <Aside>\n                    <Navbar />\n                </Aside>\n                <Main>\n                    <Switch />\n                </Main>\n            </FlexRow>\n        </div>\n    );\n}","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/redux/store.js",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Switch.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/FlexRow.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Aside.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Topbar.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/Main.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/navbar/Navbar.jsx",["118","119"],[],"import { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport NavLink from \"components/NavLink\";\n\nimport styles from './navbar.module.css';\n\nimport logo from 'images/logo.png';\nimport generate_logo from 'images/generate.png';\nimport history_logo from 'images/history.png';\nimport prompt_guide_logo from 'images/prompt.png';\nimport faq_logo from 'images/question.png';\nimport support_logo from 'images/settings.png';\n\nexport default function Navbar() {\n    const navExpanded = useSelector(state => state.nav.expanded);\n    const width = useSelector(state => state.nav.width);\n    const minWidth = useSelector(state => state.nav.minWidth);\n\n    //set initial width of nav based on device width\n    useEffect(() => {\n        if (navExpanded === true) {\n            document.querySelector(':root').style.setProperty('--nav-width', width);\n        } else {\n            document.querySelector(':root').style.setProperty('--nav-width', minWidth);\n        }\n    }, [width]);\n\n\n    useEffect(() => {\n        if (navExpanded === true) {\n            document.querySelector(':root').style.setProperty('--nav-width', width);\n        } else {\n            document.querySelector(':root').style.setProperty('--nav-width', minWidth);\n        }\n    }, [navExpanded]);\n\n    return (\n        <nav>\n            <img src={logo} alt=\"\" className={`${styles['logo']} ${!navExpanded ? styles[\"downsize\"] : ''}`}/>\n            <ul>\n                <NavLink name=\"Generate\" icon={generate_logo} />\n                <NavLink name=\"History\" icon={history_logo} />\n                <NavLink name=\"Prompt Guide\" icon={prompt_guide_logo} />\n                <NavLink name=\"FAQ\" icon={faq_logo} />\n                <NavLink name=\"Support\" icon={support_logo} />\n            </ul>\n        </nav>\n    );\n}","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/features/Header.jsx",["120","121","122"],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/redux/slices/navSlice.js",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/redux/slices/homeSlice.js",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/pages/home/Home.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/NavLink.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ToggleButton.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/pages/home/Prompt.jsx",["123"],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/features/GeneratorSettings.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/layout/FlexColumn.jsx",[],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ModelViewer.jsx",["124","125","126","127","128","129"],[],"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/Slider.jsx",["130"],[],"import {useEffect, useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UPDATE_RESOLUTION, UPDATE_DENSITY } from 'redux/slices/homeSlice';\nimport styled from 'styled-components';\n\nimport FlexRow from 'layout/FlexRow';\n\nconst SliderBackground = styled.div`\n    width: 100%;\n    height: 5px;\n    background: linear-gradient(90deg, var(--accent-color) 0%, var(--accent-color) ${props => props.middle - 1}%, #1c4e80 ${props => props.middle}%, #1c4e80 100%);\n    border-radius: 10px;\n    position: relative;\n    `;\n\nconst SliderButton = styled.div`\n    width: 15px;\n    height: 15px;\n    background-color: #1c4e80;\n    border 3px solid #4cb5f5;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translate(-50%, -50%);\n    cursor: pointer;\n    `;\n\nconst SliderDisplay = styled.div`\n    width: auto;\n    height: 30px;\n    background-color: #242424;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    margin-left: auto;\n    margin-right: 15%;\n    padding: 0 10px;\n    `;\n\nexport default function Slider({\n    min=0,\n    max=100,\n    steps,\n    color,\n    name = '',\n    label='',\n    description='',\n}) {\n    const [value, setValue] = useState(min);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const slider = document.querySelector(`#slider-${name}`);\n        const sliderThumb = document.querySelector(`#slider-thumb-${name}`);\n        const sliderController = document.querySelector(`#slider-controller-${name}`);\n        let stepList = [];\n        let sliderWidth = 0;\n        let stepDistance = 0;\n        let sliderLeft = 0;\n        let sliderRight = 0;\n        let mousePosition = 0;\n        let closestStep = 0;\n        \n\n        sliderController.addEventListener('dragstart', (e) => {\n            sliderWidth = slider.offsetWidth;\n            stepDistance = sliderWidth / steps;\n            sliderLeft = slider.getBoundingClientRect().left;\n            sliderRight = slider.getBoundingClientRect().right;\n            \n            for (let i = 0; i < steps; i++) {\n                stepList.push(sliderLeft + (stepDistance * i));\n            }\n            stepList.push(sliderRight);\n        });\n        // event listener that tracks mouse positionX when sliderThumb is clicked and dragged across slider\n        sliderController.addEventListener('drag', (e) => {\n            mousePosition = e.clientX;\n            //compare mousePosition to stepList and set sliderThumb left position to closest step\n            for (let i = 0; i < stepList.length; i++) {\n                if (Math.abs(mousePosition - stepList[i]) < Math.abs(mousePosition - closestStep)) {\n                    if(mousePosition !== 0) {\n                        setValue(Math.round(min + ((max - min) / steps) * i));\n                        if(name === 'density') {\n                            dispatch(UPDATE_DENSITY(Math.round(min + ((max - min) / steps) * i)));\n                        } else if (name === 'resolution') {\n                            dispatch(UPDATE_RESOLUTION(Math.round(min + ((max - min) / steps) * i)));\n                        }\n                        closestStep = stepList[i];\n                    }\n                }\n            }\n            sliderThumb.style.left = `${closestStep - sliderLeft}px`;\n            sliderController.style.left = `${closestStep - sliderLeft}px`;\n        });\n        sliderController.addEventListener('dragend', (e) => {\n            sliderThumb.style.left = `${closestStep - sliderLeft}px`;\n            sliderController.style.left = `${closestStep - sliderLeft}px`;\n        });\n    }, []);\n    return(\n        <>\n            <FlexRow alignItems={'center'}>\n                <p>{label}</p>\n                <SliderDisplay>{value}</SliderDisplay>\n            </FlexRow>\n            <p style={{color: '#AAA'}}>{description}</p>\n            <div id={`slider-${name}`} style={{position: 'relative', width: '80%', height: '20px', margin: '0 auto', display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n                <SliderBackground id=\"test-id\" middle={((value-min)/(max-min)) * 100}/>\n                <SliderButton id={`slider-thumb-${name}`}/>\n                <SliderButton id={`slider-controller-${name}`} draggable=\"true\" style={{opacity: '0'}}/>\n            </div>\n        </>\n        \n    )\n}\n\n","/Users/daniel/Desktop/OpenAI/ai-react-fix/src/utils/globalVariables.js",[],[],{"ruleId":"131","severity":1,"message":"132","line":26,"column":22,"nodeType":"133","endLine":26,"endColumn":30},{"ruleId":"131","severity":1,"message":"134","line":42,"column":26,"nodeType":"133","endLine":42,"endColumn":34},{"ruleId":"131","severity":1,"message":"135","line":27,"column":8,"nodeType":"136","endLine":27,"endColumn":15,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"138","line":36,"column":8,"nodeType":"136","endLine":36,"endColumn":21,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":14},{"ruleId":"140","severity":1,"message":"144","line":10,"column":8,"nodeType":"142","messageId":"143","endLine":10,"endColumn":12},{"ruleId":"140","severity":1,"message":"145","line":14,"column":11,"nodeType":"142","messageId":"143","endLine":14,"endColumn":20},{"ruleId":"131","severity":1,"message":"146","line":65,"column":20,"nodeType":"133","endLine":65,"endColumn":24},{"ruleId":"140","severity":1,"message":"147","line":1,"column":21,"nodeType":"142","messageId":"143","endLine":1,"endColumn":29},{"ruleId":"140","severity":1,"message":"148","line":9,"column":40,"nodeType":"142","messageId":"143","endLine":9,"endColumn":46},{"ruleId":"140","severity":1,"message":"149","line":13,"column":9,"nodeType":"142","messageId":"143","endLine":13,"endColumn":20},{"ruleId":"131","severity":1,"message":"146","line":138,"column":18,"nodeType":"133","endLine":138,"endColumn":22},{"ruleId":"131","severity":1,"message":"150","line":143,"column":6,"nodeType":"136","endLine":143,"endColumn":14,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"152","line":163,"column":10,"nodeType":"142","messageId":"143","endLine":163,"endColumn":21},{"ruleId":"131","severity":1,"message":"153","line":102,"column":8,"nodeType":"136","endLine":102,"endColumn":10,"suggestions":"154"},"react-hooks/exhaustive-deps","Assignments to the 'device' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Literal","Assignments to the 'device' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'minWidth' and 'navExpanded'. Either include them or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has missing dependencies: 'minWidth' and 'width'. Either include them or remove the dependency array.",["156"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'imageLeft' is assigned a value but never used.","Assignments to the 'rendered' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useState' is defined but never used.","'loader' is defined but never used.","'meshDisplay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMesh'. Either include it or remove the dependency array.",["157"],"'ViewBlocker' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'max', 'min', 'name', and 'steps'. Either include them or remove the dependency array. If 'setValue' needs the current value of 'steps', you can also switch to useReducer instead of useState and read 'steps' in the reducer.",["158"],{"desc":"159","fix":"160"},{"desc":"159","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [minWidth, navExpanded, width]",{"range":"166","text":"167"},{"range":"168","text":"167"},"Update the dependencies array to be: [loadMesh, meshID]",{"range":"169","text":"170"},"Update the dependencies array to be: [dispatch, max, min, name, steps]",{"range":"171","text":"172"},[981,988],"[minWidth, navExpanded, width]",[1258,1271],[4327,4335],"[loadMesh, meshID]",[3634,3636],"[dispatch, max, min, name, steps]"]