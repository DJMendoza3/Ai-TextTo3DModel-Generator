{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ModelViewer.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as THREE from \"three\";\nimport { PLYLoader } from \"three/examples/jsm/loaders/PLYLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { FETCH_URL } from \"utils/globalVariables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet container;\nlet camera, scene, renderer, controls, loader, mesh, points, wireframe;\nexport default function ModelViewer() {\n  _s();\n  const meshID = useSelector(state => state.home.meshID);\n  const meshDisplay = useSelector(state => state.home.displayMode);\n  const meshToggle = useSelector(state => state.home.modelDisplay);\n  function init() {\n    //Creating the container for the ply\n    container = document.createElement(\"div\");\n    document.getElementById(\"test-render\").appendChild(container);\n\n    //initializing the camera\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 2000);\n    camera.position.z = 2;\n    camera.position.set(1, 1, 1);\n\n    //initializing the scene\n    scene = new THREE.Scene();\n    scene.add(new THREE.AxesHelper(0.5));\n\n    //initializing renderer\n    renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    //size of viewport (width, height) grab size of container and set it to renderer\n    renderer.setSize(document.getElementById(\"test-render\").clientWidth, document.getElementById(\"test-render\").clientHeight);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n\n    //adding renderer to DOM\n    container.appendChild(renderer.domElement);\n\n    //initializing interactive controls\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n  }\n  function loadMesh() {\n    //clearing the scene\n    scene.remove(mesh);\n    scene.remove(points);\n    scene.remove(wireframe);\n    //rendering ply file\n    const plyLoader = new PLYLoader();\n    plyLoader.load(FETCH_URL + \"/models/\" + meshID, function (geometry) {\n      const material = new THREE.PointsMaterial({\n        size: 0.01,\n        vertexColors: true\n      });\n      mesh = new THREE.Mesh(geometry, material);\n      wireframe = new THREE.LineSegments(geometry);\n      points = new THREE.Points(geometry, material);\n      mesh.rotateX(-Math.PI / 2);\n      wireframe.rotateX(-Math.PI / 2);\n      points.rotateX(-Math.PI / 2);\n      scene.add(mesh);\n    },\n    // called when loading is in progress\n    function (xhr) {\n      console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n    },\n    // called when loading has errors\n    function (error) {\n      console.log(\"An error happened\");\n      console.log(error);\n    });\n  }\n  function animate() {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n    controls.update();\n  }\n\n  //useEffect for reloading rederer when settingsOpen or navToggle is toggled\n  useEffect(() => {\n    const element = document.getElementById(\"test-render\");\n    //new resize observer\n    new ResizeObserver(() => {\n      if (renderer !== undefined) {\n        renderer.setSize(document.getElementById(\"test-render\").clientWidth, document.getElementById(\"test-render\").clientHeight);\n        camera.aspect = document.getElementById(\"test-render\").clientWidth / document.getElementById(\"test-render\").clientHeight;\n        camera.updateProjectionMatrix();\n      }\n    }).observe(element);\n  }, []);\n\n  //useEffect for reloading rederer when window is resized\n  useEffect(() => {\n    const handleResize = () => {\n      renderer.setSize(document.getElementById(\"test-render\").clientWidth, document.getElementById(\"test-render\").clientHeight);\n      camera.aspect = document.getElementById(\"test-render\").clientWidth / document.getElementById(\"test-render\").clientHeight;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  let rendered = false;\n  useEffect(() => {\n    if (!rendered) {\n      init();\n      animate();\n      rendered = true;\n    }\n  }, []);\n  useEffect(() => {\n    if (mesh !== null) {\n      loadMesh();\n    }\n  }, [meshID]);\n  useEffect(() => {\n    if (meshToggle) {\n      scene.add(mesh);\n      scene.remove(points);\n    } else {\n      scene.remove(mesh);\n      scene.add(points);\n    }\n  }, [meshToggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"test-render\",\n    style: {\n      width: \"99%\",\n      flex: \"1\",\n      maxHeight: \"80%\",\n      border: 'solid 1px var(--accent-color)',\n      position: 'relative'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelViewer, \"FFFsxW5ZPnaew4IF1TOOE9Bix1s=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = ModelViewer;\nfunction ViewBlocker() {\n  _s2();\n  const meshStatus = useSelector(state => state.home.meshStatus);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(0,0,0,0.5)\",\n      zIndex: 1,\n      color: \"white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: meshStatus.map(status => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100%\"\n          },\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s2(ViewBlocker, \"xrfmA8abQDok7BG/jgcqP5l5E2A=\", false, function () {\n  return [useSelector];\n});\n_c2 = ViewBlocker;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModelViewer\");\n$RefreshReg$(_c2, \"ViewBlocker\");","map":{"version":3,"names":["useEffect","useState","useSelector","THREE","PLYLoader","OrbitControls","FETCH_URL","container","camera","scene","renderer","controls","loader","mesh","points","wireframe","ModelViewer","meshID","state","home","meshDisplay","displayMode","meshToggle","modelDisplay","init","document","createElement","getElementById","appendChild","PerspectiveCamera","window","innerWidth","innerHeight","position","z","set","Scene","add","AxesHelper","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","clientWidth","clientHeight","outputEncoding","sRGBEncoding","domElement","update","loadMesh","remove","plyLoader","load","geometry","material","PointsMaterial","size","vertexColors","Mesh","LineSegments","Points","rotateX","Math","PI","xhr","console","log","loaded","total","error","animate","requestAnimationFrame","render","element","ResizeObserver","undefined","aspect","updateProjectionMatrix","observe","handleResize","addEventListener","removeEventListener","rendered","width","flex","maxHeight","border","ViewBlocker","meshStatus","top","left","height","backgroundColor","zIndex","color","map","status","display","flexDirection","alignItems","justifyContent"],"sources":["/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ModelViewer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as THREE from \"three\";\nimport { PLYLoader } from \"three/examples/jsm/loaders/PLYLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport {FETCH_URL} from \"utils/globalVariables\";\n\nlet container;\nlet camera, scene, renderer, controls, loader, mesh, points, wireframe;\n\nexport default function ModelViewer() {\n  const meshID = useSelector((state) => state.home.meshID);\n  const meshDisplay = useSelector((state) => state.home.displayMode);\n\n  const meshToggle = useSelector((state) => state.home.modelDisplay);\n\n  function init() {\n    //Creating the container for the ply\n    container = document.createElement(\"div\");\n    document.getElementById(\"test-render\").appendChild(container);\n\n    //initializing the camera\n    camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      2000\n    );\n    camera.position.z = 2;\n    camera.position.set(1, 1, 1);\n\n    //initializing the scene\n    scene = new THREE.Scene();\n    scene.add(new THREE.AxesHelper(0.5));\n\n    //initializing renderer\n    renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    //size of viewport (width, height) grab size of container and set it to renderer\n    renderer.setSize(\n      document.getElementById(\"test-render\").clientWidth,\n      document.getElementById(\"test-render\").clientHeight\n    );\n    renderer.outputEncoding = THREE.sRGBEncoding;\n\n    //adding renderer to DOM\n    container.appendChild(renderer.domElement);\n\n    //initializing interactive controls\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n  }\n  function loadMesh() {\n    //clearing the scene\n    scene.remove(mesh);\n    scene.remove(points);\n    scene.remove(wireframe);\n    //rendering ply file\n    const plyLoader = new PLYLoader();\n\n    plyLoader.load(\n      FETCH_URL + \"/models/\" + meshID,\n      function (geometry) {\n        const material = new THREE.PointsMaterial({\n          size: 0.01,\n          vertexColors: true,\n        });\n        mesh = new THREE.Mesh(geometry, material);\n        wireframe = new THREE.LineSegments(geometry);\n        points = new THREE.Points(geometry, material);\n        mesh.rotateX(-Math.PI / 2);\n        wireframe.rotateX(-Math.PI / 2);\n        points.rotateX(-Math.PI / 2);\n\n        scene.add(mesh);\n      },\n      // called when loading is in progress\n      function (xhr) {\n        console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n      },\n      // called when loading has errors\n      function (error) {\n        console.log(\"An error happened\");\n        console.log(error);\n      }\n    );\n  }\n    \n\n\n  function animate() {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n    controls.update();\n  }\n\n  //useEffect for reloading rederer when settingsOpen or navToggle is toggled\n  useEffect(() => {\n    const element = document.getElementById(\"test-render\");\n    //new resize observer\n    new ResizeObserver(() => {\n      if (renderer !== undefined) {\n        renderer.setSize(\n          document.getElementById(\"test-render\").clientWidth,\n          document.getElementById(\"test-render\").clientHeight\n        );\n        camera.aspect =\n          document.getElementById(\"test-render\").clientWidth /\n          document.getElementById(\"test-render\").clientHeight;\n        camera.updateProjectionMatrix();\n      }\n    }).observe(element);\n  }, []);\n\n  //useEffect for reloading rederer when window is resized\n  useEffect(() => {\n    const handleResize = () => {\n      renderer.setSize(\n        document.getElementById(\"test-render\").clientWidth,\n        document.getElementById(\"test-render\").clientHeight\n      );\n      camera.aspect =\n        document.getElementById(\"test-render\").clientWidth /\n        document.getElementById(\"test-render\").clientHeight;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  let rendered = false;\n  useEffect(() => {\n    if (!rendered) {\n      init();\n      animate();\n      rendered = true;\n    }\n  }, []);\n  useEffect(() => {\n    if(mesh !== null) {\n      loadMesh();\n    }\n  }, [meshID]);\n  useEffect(() => {\n    if (meshToggle) {\n      scene.add(mesh);\n      scene.remove(points);\n    } else {\n      scene.remove(mesh);\n      scene.add(points);\n    }\n  }, [meshToggle])\n  return (\n    <div\n      id=\"test-render\"\n      style={{ width: \"99%\", flex: \"1\", maxHeight: \"80%\", border: 'solid 1px var(--accent-color)', position: 'relative' }}\n    >\n      {/* {!meshDisplay ? <ViewBlocker /> : null} */}\n    </div>\n  );\n}\n\nfunction ViewBlocker() {\n\n  const meshStatus = useSelector((state) => state.home.meshStatus);\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        zIndex: 1,\n        color: \"white\",\n      }}\n    >\n      <div>\n        {meshStatus.map((status) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"100%\",\n              }}\n            >{status}</div>\n          )})}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}