{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OpenAI/ai-frontend/ai-react/src/components/Box.jsx\",\n  _s = $RefreshSig$();\nimport { createRoot } from 'react-dom/client';\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Box(props) {\n  _s();\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef();\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false);\n  const [clicked, click] = useState(false);\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => ref.current.rotation.x += delta);\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ...props,\n    ref: ref,\n    scale: clicked ? 1.5 : 1,\n    onClick: event => click(!clicked),\n    onPointerOver: event => hover(true),\n    onPointerOut: event => hover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: hovered ? 'hotpink' : 'orange'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Box, \"z4ku1cFD3MTB1blzCtJiPqYRyRY=\", false, function () {\n  return [useFrame];\n});\n_c = Box;\nvar _c;\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["createRoot","React","useRef","useState","Canvas","useFrame","Box","props","ref","hovered","hover","clicked","click","state","delta","current","rotation","x","event"],"sources":["/Users/daniel/Desktop/OpenAI/ai-frontend/ai-react/src/components/Box.jsx"],"sourcesContent":["import { createRoot } from 'react-dom/client'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nexport default function Box(props) {\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef()\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false)\n  const [clicked, click] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (ref.current.rotation.x += delta))\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={clicked ? 1.5 : 1}\n      onClick={(event) => click(!clicked)}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAA;AAErD,eAAe,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EACjC;EACA,MAAMC,GAAG,GAAGN,MAAM,EAAE;EACpB;EACA,MAAM,CAACO,OAAO,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACxC;EACAE,QAAQ,CAAC,CAACQ,KAAK,EAAEC,KAAK,KAAMN,GAAG,CAACO,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAIH,KAAM,CAAC;EAC7D;EACA,oBACE;IAAA,GACMP,KAAK;IACT,GAAG,EAAEC,GAAI;IACT,KAAK,EAAEG,OAAO,GAAG,GAAG,GAAG,CAAE;IACzB,OAAO,EAAGO,KAAK,IAAKN,KAAK,CAAC,CAACD,OAAO,CAAE;IACpC,aAAa,EAAGO,KAAK,IAAKR,KAAK,CAAC,IAAI,CAAE;IACtC,YAAY,EAAGQ,KAAK,IAAKR,KAAK,CAAC,KAAK,CAAE;IAAA,wBACtC;MAAa,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC;MAAsB,KAAK,EAAED,OAAO,GAAG,SAAS,GAAG;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEX;AAAC,GArBuBH,GAAG;EAAA,QAOzBD,QAAQ;AAAA;AAAA,KAPcC,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}