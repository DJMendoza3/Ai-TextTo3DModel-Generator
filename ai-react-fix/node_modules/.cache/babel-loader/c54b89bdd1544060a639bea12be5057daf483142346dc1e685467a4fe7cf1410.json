{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/pages/home/Prompt.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { SET_MESHID } from \"redux/slices/homeSlice\";\nimport FlexRow from \"layout/FlexRow\";\nimport styles from './home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Prompt() {\n  _s();\n  const dispatch = useDispatch();\n  function handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const prompt = data.get('prompt-form');\n    console.log(prompt);\n    fetch('http://10.1.10.164:5000/generate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: prompt\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data.id);\n      dispatch(SET_MESHID(data.id));\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles[\"prompt\"],\n    children: [/*#__PURE__*/_jsxDEV(FlexRow, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(FlexRow, {\n        gap: '15px',\n        alignItems: 'center',\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"prompt-form\",\n          id: \"prompt-form\",\n          defaultValue: \"A corgie wearing a santa hat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Prompt, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = Prompt;\nvar _c;\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"names":["useDispatch","SET_MESHID","FlexRow","styles","Prompt","dispatch","handleSubmit","e","preventDefault","data","FormData","target","prompt","get","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","id","catch","err"],"sources":["/Users/daniel/Desktop/OpenAI/ai-react-fix/src/pages/home/Prompt.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { SET_MESHID } from \"redux/slices/homeSlice\";\n\nimport FlexRow from \"layout/FlexRow\";\n\nimport styles from './home.module.css';\n\nexport default function Prompt() {\n    const dispatch = useDispatch();\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const prompt = data.get('prompt-form');\n        console.log(prompt);\n        fetch('http://10.1.10.164:5000/generate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({prompt: prompt})\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data.id);\n            dispatch(SET_MESHID(data.id));\n        })\n        .catch(err => console.log(err));\n    }\n    \n\n\n    return (\n        <div id={styles[\"prompt\"]}>\n            <FlexRow>\n                <p>question</p>\n                <p>info</p>\n            </FlexRow>\n                <form onSubmit={handleSubmit}>\n                    <FlexRow gap={'15px'} alignItems={'center'}>\n                        <textarea name=\"prompt-form\" id=\"prompt-form\" defaultValue=\"A corgie wearing a santa hat\"/>\n                        <input type=\"submit\" />\n                    </FlexRow>\n                </form>\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,wBAAwB;AAEnD,OAAOC,OAAO,MAAM,gBAAgB;AAEpC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,eAAe,SAASC,MAAM,GAAG;EAAA;EAC7B,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,SAASM,YAAY,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;IACnC,MAAMC,MAAM,GAAGH,IAAI,CAACI,GAAG,CAAC,aAAa,CAAC;IACtCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBI,KAAK,CAAC,kCAAkC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACT,MAAM,EAAEA;MAAM,CAAC;IACzC,CAAC,CAAC,CACDU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACb,IAAI,IAAI;MACVK,OAAO,CAACC,GAAG,CAACN,IAAI,CAACgB,EAAE,CAAC;MACpBpB,QAAQ,CAACJ,UAAU,CAACQ,IAAI,CAACgB,EAAE,CAAC,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC,CAAC;EACnC;EAIA,oBACI;IAAK,EAAE,EAAExB,MAAM,CAAC,QAAQ,CAAE;IAAA,wBACtB,QAAC,OAAO;MAAA,wBACJ;QAAA,UAAG;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAI,eACf;QAAA,UAAG;MAAI;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAM,QAAQ,EAAEG,YAAa;MAAA,uBACzB,QAAC,OAAO;QAAC,GAAG,EAAE,MAAO;QAAC,UAAU,EAAE,QAAS;QAAA,wBACvC;UAAU,IAAI,EAAC,aAAa;UAAC,EAAE,EAAC,aAAa;UAAC,YAAY,EAAC;QAA8B;UAAA;UAAA;UAAA;QAAA,QAAE,eAC3F;UAAO,IAAI,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACjB;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEd;AAAC,GAvCuBF,MAAM;EAAA,QACTJ,WAAW;AAAA;AAAA,KADRI,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}