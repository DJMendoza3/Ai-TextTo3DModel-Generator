{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OpenAI/ai-frontend/ai-react/src/components/ModelViewer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { PLYLoader } from \"three/examples/jsm/loaders/PLYLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport test_mesh from \"temp_models/mesh.ply\";\n\n// export default function ModelViewer() {\n//     const plyLoader = useLoader(PLYLoader, test_mesh);\n//     return(\n//         <Canvas>\n//             <mesh geometry={plyLoader} />\n//         </Canvas>\n//     );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar container;\nvar camera, scene, renderer, controls, loader;\nexport default function ModelViewer() {\n  _s();\n  let rendered = false;\n  useEffect(() => {\n    if (!rendered) {\n      init();\n      animate();\n      rendered = true;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"test-render\",\n    style: {\n      width: '800px',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_s(ModelViewer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ModelViewer;\nfunction init() {\n  //Creating the container for the ply\n  container = document.createElement(\"div\");\n  document.getElementById(\"test-render\").appendChild(container);\n\n  //initializing the camera\n  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 2000);\n  camera.position.z = 2;\n  camera.position.set(1, 1, 1);\n\n  //initializing the scene\n  scene = new THREE.Scene();\n  scene.add(new THREE.AxesHelper(30));\n\n  //initializing renderer\n  renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  //size of viewport (width, height) grab size of container and set it to renderer\n  renderer.setSize(document.getElementById('test-render').clientWidth, document.getElementById('test-render').clientHeight);\n  renderer.outputEncoding = THREE.sRGBEncoding;\n\n  //adding renderer to DOM\n  container.appendChild(renderer.domElement);\n\n  //initializing interactive controls\n  controls = new OrbitControls(camera, renderer.domElement);\n  controls.update();\n\n  //rendering ply file\n  const plyLoader = new PLYLoader();\n  plyLoader.load(test_mesh, function (geometry) {\n    const mesh = new THREE.Points(geometry);\n    mesh.rotateX(-Math.PI / 2);\n    scene.add(mesh);\n  },\n  // called when loading is in progress\n  function (xhr) {\n    console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n  },\n  // called when loading has errors\n  function (error) {\n    console.log(\"An error happened\");\n    console.log(error);\n  });\n}\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n  controls.update();\n}\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["useEffect","THREE","Canvas","useLoader","PLYLoader","OrbitControls","test_mesh","container","camera","scene","renderer","controls","loader","ModelViewer","rendered","init","animate","width","height","document","createElement","getElementById","appendChild","PerspectiveCamera","window","innerWidth","innerHeight","position","z","set","Scene","add","AxesHelper","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","clientWidth","clientHeight","outputEncoding","sRGBEncoding","domElement","update","plyLoader","load","geometry","mesh","Points","rotateX","Math","PI","xhr","console","log","loaded","total","error","requestAnimationFrame","render"],"sources":["/Users/daniel/Desktop/OpenAI/ai-frontend/ai-react/src/components/ModelViewer.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { PLYLoader } from \"three/examples/jsm/loaders/PLYLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nimport test_mesh from \"temp_models/mesh.ply\";\n\n// export default function ModelViewer() {\n//     const plyLoader = useLoader(PLYLoader, test_mesh);\n//     return(\n//         <Canvas>\n//             <mesh geometry={plyLoader} />\n//         </Canvas>\n//     );\n// }\n\nvar container;\nvar camera, scene, renderer, controls, loader;\n\nexport default function ModelViewer() {\n\n    let rendered = false;\n    useEffect(() => {\n        if (!rendered) {\n            init();\n            animate();\n            rendered = true;\n        }\n        \n    }, []);\n  return <div id=\"test-render\" style={{width: '800px', height: '400px'}}></div>;\n}\n\nfunction init() {\n  //Creating the container for the ply\n  container = document.createElement(\"div\");\n  document.getElementById(\"test-render\").appendChild(container);\n\n  //initializing the camera\n  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 2000);\n  camera.position.z = 2;\n  camera.position.set(1, 1, 1);\n\n  //initializing the scene\n  scene = new THREE.Scene();\n  scene.add(new THREE.AxesHelper(30));\n\n  //initializing renderer\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  //size of viewport (width, height) grab size of container and set it to renderer\n  renderer.setSize(document.getElementById('test-render').clientWidth, document.getElementById('test-render').clientHeight);\n  renderer.outputEncoding = THREE.sRGBEncoding;\n\n  //adding renderer to DOM\n  container.appendChild(renderer.domElement);\n\n  //initializing interactive controls\n  controls = new OrbitControls(camera, renderer.domElement);\n  controls.update();\n\n  //rendering ply file\n  const plyLoader = new PLYLoader();\n\n  plyLoader.load(\n    test_mesh,\n    function (geometry) {\n      const mesh = new THREE.Points(geometry);\n      mesh.rotateX(-Math.PI / 2);\n      scene.add(mesh);\n    },\n    // called when loading is in progress\n    function (xhr) {\n      console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n    },\n    // called when loading has errors\n    function (error) {\n      console.log(\"An error happened\");\n      console.log(error);\n    }\n  );\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n  controls.update();\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}