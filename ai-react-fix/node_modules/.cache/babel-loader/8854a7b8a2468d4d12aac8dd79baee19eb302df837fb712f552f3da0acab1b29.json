{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OpenAI/ai-frontend/ai-react/src/components/ModelViewer.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as THREE from \"three\";\nimport { PLYLoader } from \"three/examples/jsm/loaders/PLYLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport test_mesh from \"temp_models/mesh.ply\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar container;\nvar camera, scene, renderer, controls, loader;\nexport default function ModelViewer() {\n  _s();\n  const settingsOpen = useSelector(state => state.home.settingsOpen);\n  function init() {\n    //Creating the container for the ply\n    container = document.createElement(\"div\");\n    document.getElementById(\"test-render\").appendChild(container);\n\n    //initializing the camera\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 2000);\n    camera.position.z = 2;\n    camera.position.set(1, 1, 1);\n\n    //initializing the scene\n    scene = new THREE.Scene();\n    scene.add(new THREE.AxesHelper(.5));\n\n    //initializing renderer\n    renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    //size of viewport (width, height) grab size of container and set it to renderer\n    renderer.setSize(document.getElementById(\"test-render\").clientWidth, document.getElementById(\"test-render\").clientHeight);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n\n    //adding renderer to DOM\n    container.appendChild(renderer.domElement);\n\n    //initializing interactive controls\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n\n    //rendering ply file\n    const plyLoader = new PLYLoader();\n    plyLoader.load(test_mesh, function (geometry) {\n      const material = new THREE.PointsMaterial({\n        size: 0.01,\n        vertexColors: true\n      });\n      const mesh = new THREE.Points(geometry, material);\n      mesh.rotateX(-Math.PI / 2);\n      scene.add(mesh);\n    },\n    // called when loading is in progress\n    function (xhr) {\n      console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n    },\n    // called when loading has errors\n    function (error) {\n      console.log(\"An error happened\");\n      console.log(error);\n    });\n  }\n  function animate() {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n    controls.update();\n  }\n  //useEffect for reloading rederer when settingsOpen is toggled \n  useEffect(() => {\n    element = document.getElementById(\"settings\");\n    //new resize observer\n    const resizeObserver = new ResizeObserver(() => {\n      console.log('test');\n    });\n    if (renderer !== undefined) {\n      renderer.setSize(document.getElementById(\"test-render\").clientWidth, document.getElementById(\"test-render\").clientHeight);\n      camera.aspect = document.getElementById(\"test-render\").clientWidth / document.getElementById(\"test-render\").clientHeight;\n      camera.updateProjectionMatrix();\n    }\n    resizeObserver.observe(element);\n  }, [settingsOpen]);\n\n  //useEffect for reloading rederer when window is resized \n  useEffect(() => {\n    const handleResize = () => {\n      renderer.setSize(document.getElementById(\"test-render\").clientWidth, document.getElementById(\"test-render\").clientHeight);\n      camera.aspect = document.getElementById(\"test-render\").clientWidth / document.getElementById(\"test-render\").clientHeight;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  let rendered = false;\n  useEffect(() => {\n    if (!rendered) {\n      init();\n      animate();\n      rendered = true;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"test-render\",\n    style: {\n      width: \"100%\",\n      flex: \"1\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n}\n_s(ModelViewer, \"4zMS5PrYZMdzbptDv1ZjE45hFsQ=\", false, function () {\n  return [useSelector];\n});\n_c = ModelViewer;\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["useEffect","useSelector","THREE","PLYLoader","OrbitControls","test_mesh","container","camera","scene","renderer","controls","loader","ModelViewer","settingsOpen","state","home","init","document","createElement","getElementById","appendChild","PerspectiveCamera","window","innerWidth","innerHeight","position","z","set","Scene","add","AxesHelper","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","clientWidth","clientHeight","outputEncoding","sRGBEncoding","domElement","update","plyLoader","load","geometry","material","PointsMaterial","size","vertexColors","mesh","Points","rotateX","Math","PI","xhr","console","log","loaded","total","error","animate","requestAnimationFrame","render","element","resizeObserver","ResizeObserver","undefined","aspect","updateProjectionMatrix","observe","handleResize","addEventListener","removeEventListener","rendered","width","flex"],"sources":["/Users/daniel/Desktop/OpenAI/ai-frontend/ai-react/src/components/ModelViewer.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as THREE from \"three\";\nimport { PLYLoader } from \"three/examples/jsm/loaders/PLYLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nimport test_mesh from \"temp_models/mesh.ply\";\n\nvar container;\nvar camera, scene, renderer, controls, loader;\n\nexport default function ModelViewer() {\n    const settingsOpen = useSelector(state => state.home.settingsOpen);\n\n  function init() {\n    //Creating the container for the ply\n    container = document.createElement(\"div\");\n    document.getElementById(\"test-render\").appendChild(container);\n\n    //initializing the camera\n    camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      2000\n    );\n    camera.position.z = 2;\n    camera.position.set(1, 1, 1);\n\n    //initializing the scene\n    scene = new THREE.Scene();\n    scene.add(new THREE.AxesHelper(.5));\n\n    //initializing renderer\n    renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    //size of viewport (width, height) grab size of container and set it to renderer\n    renderer.setSize(\n      document.getElementById(\"test-render\").clientWidth,\n      document.getElementById(\"test-render\").clientHeight\n    );\n    renderer.outputEncoding = THREE.sRGBEncoding;\n\n    //adding renderer to DOM\n    container.appendChild(renderer.domElement);\n\n    //initializing interactive controls\n    controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n\n    //rendering ply file\n    const plyLoader = new PLYLoader();\n\n    plyLoader.load(\n      test_mesh,\n      function (geometry) {\n        const material = new THREE.PointsMaterial({\n          size: 0.01,\n          vertexColors: true,\n        });\n        const mesh = new THREE.Points(geometry, material);\n        mesh.rotateX(-Math.PI / 2);\n        scene.add(mesh);\n      },\n      // called when loading is in progress\n      function (xhr) {\n        console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n      },\n      // called when loading has errors\n      function (error) {\n        console.log(\"An error happened\");\n        console.log(error);\n      }\n    );\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n    controls.update();\n  }\n  //useEffect for reloading rederer when settingsOpen is toggled \n    useEffect(() => {\n        element = document.getElementById(\"settings\");\n        //new resize observer\n        const resizeObserver = new ResizeObserver(() => {\n            console.log('test');\n        });\n        \n\n            if (renderer !== undefined) {\n                renderer.setSize(\n                    document.getElementById(\"test-render\").clientWidth,\n                    document.getElementById(\"test-render\").clientHeight\n                );\n                camera.aspect = document.getElementById(\"test-render\").clientWidth / document.getElementById(\"test-render\").clientHeight;\n                camera.updateProjectionMatrix();\n            }\n        resizeObserver.observe(element  );\n\n    }, [settingsOpen]);\n\n\n  //useEffect for reloading rederer when window is resized \n    useEffect(() => {\n        const handleResize = () => {\n            renderer.setSize(\n                document.getElementById(\"test-render\").clientWidth,\n                document.getElementById(\"test-render\").clientHeight\n            );\n            camera.aspect = document.getElementById(\"test-render\").clientWidth / document.getElementById(\"test-render\").clientHeight;\n            camera.updateProjectionMatrix();\n        }\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n\n  let rendered = false;\n  useEffect(() => {\n    if (!rendered) {\n      init();\n      animate();\n      rendered = true;\n    }\n  }, []);\n  return <div id=\"test-render\" style={{ width: \"100%\", flex: \"1\" }}></div>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}