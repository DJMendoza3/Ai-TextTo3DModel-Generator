{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ToggleButton.jsx\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n    height: 30px;\n    width: 30px;\n    margin: 20px;\n    background-color: ${props => props.backgroundColor || 'var(--accent-color)'};\n    border: none;\n    border-radius: 4px;\n    box-shadow: 2px 4px;\n    ${props => props.customStyle};\n`;\n_c = Button;\nexport default function ToggleButton(_ref) {\n  let {\n    icon = '',\n    clickHandler,\n    customStyle = '',\n    backgroundColor\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: clickHandler,\n    customStyle: customStyle,\n    backgroundColor: backgroundColor,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: icon,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"test('should first', () => \", second, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n}\n_c2 = ToggleButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ToggleButton\");","map":{"version":3,"names":["styled","Button","button","props","backgroundColor","customStyle","ToggleButton","icon","clickHandler","second"],"sources":["/Users/daniel/Desktop/OpenAI/ai-react-fix/src/components/ToggleButton.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Button = styled.button`\n    height: 30px;\n    width: 30px;\n    margin: 20px;\n    background-color: ${props => props.backgroundColor || 'var(--accent-color)'};\n    border: none;\n    border-radius: 4px;\n    box-shadow: 2px 4px;\n    ${props => props.customStyle};\n`;\n\nexport default function ToggleButton({\n    icon = '',\n    clickHandler,\n    customStyle = '',\n    backgroundColor,\n}) {\n    return (\n            <Button onClick={clickHandler} customStyle={customStyle} backgroundColor={backgroundColor}>\n                <img src={icon} alt=\"\" />\n                <p>test('should first', () => { second })</p>\n            </Button>\n    );\n}"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAAC;AAEvC,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAO;AAC7B;AACA;AACA;AACA,wBAAwBC,KAAK,IAAIA,KAAK,CAACC,eAAe,IAAI,qBAAsB;AAChF;AACA;AACA;AACA,MAAMD,KAAK,IAAIA,KAAK,CAACE,WAAY;AACjC,CAAC;AAAC,KATIJ,MAAM;AAWZ,eAAe,SAASK,YAAY,OAKjC;EAAA,IALkC;IACjCC,IAAI,GAAG,EAAE;IACTC,YAAY;IACZH,WAAW,GAAG,EAAE;IAChBD;EACJ,CAAC;EACG,oBACQ,QAAC,MAAM;IAAC,OAAO,EAAEI,YAAa;IAAC,WAAW,EAAEH,WAAY;IAAC,eAAe,EAAED,eAAgB;IAAA,wBACtF;MAAK,GAAG,EAAEG,IAAK;MAAC,GAAG,EAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACzB;MAAA,WAAG,6BAA2B,EAAEE,MAAM,EAAE,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAErB;AAAC,MAZuBH,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}