{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst homeSlice = createSlice({\n  name: 'home',\n  initialState: {\n    settingsOpen: true,\n    settingsDevice: 'desktop',\n    meshStatus: ['generating'],\n    displayMode: true,\n    prompt: '',\n    meshID: 0,\n    modelDisplay: true,\n    density: 1024,\n    resolution: 32\n  },\n  reducers: {\n    UPDATE_PROMPT: (state, action) => {\n      state.prompt = action.payload;\n    },\n    SETTINGS_TOGGLE: state => {\n      state.settingsOpen = !state.settingsOpen;\n    },\n    SET_MESHID: (state, action) => {\n      state.meshID = action.payload;\n    },\n    MODEL_DISPLAY_TOGGLE: state => {\n      state.modelDisplay = !state.modelDisplay;\n    },\n    UPDATE_DENSITY: (state, action) => {\n      state.density = action.payload;\n    },\n    UPDATE_RESOLUTION: (state, action) => {\n      state.resolution = action.payload;\n    },\n    TOGGLE_SETTINGS: (state, action) => {\n      state.settingsDevice = action.payload;\n    },\n    TOGGLE_DISPLAY_MODE: (state, action) => {\n      state.displayMode = action.payload;\n    },\n    CLEAR_MESH_STATUS: state => {\n      state.meshStatus = ['generating'];\n    },\n    ADD_MESH_STATUS: (state, action) => {\n      state.meshStatus = [...state.meshStatus, action.payload];\n    }\n  }\n});\nexport const {\n  SETTINGS_TOGGLE,\n  UPDATE_PROMPT,\n  CLEAR_MESH_STATUS,\n  SET_MESHID,\n  ADD_MESH_STATUS,\n  TOGGLE_DISPLAY_MODE,\n  MODEL_DISPLAY_TOGGLE,\n  UPDATE_DENSITY,\n  UPDATE_RESOLUTION,\n  TOGGLE_SETTINGS\n} = homeSlice.actions;\nexport default homeSlice.reducer;","map":{"version":3,"names":["createSlice","homeSlice","name","initialState","settingsOpen","settingsDevice","meshStatus","displayMode","prompt","meshID","modelDisplay","density","resolution","reducers","UPDATE_PROMPT","state","action","payload","SETTINGS_TOGGLE","SET_MESHID","MODEL_DISPLAY_TOGGLE","UPDATE_DENSITY","UPDATE_RESOLUTION","TOGGLE_SETTINGS","TOGGLE_DISPLAY_MODE","CLEAR_MESH_STATUS","ADD_MESH_STATUS","actions","reducer"],"sources":["/Users/daniel/Desktop/OpenAI/ai-react-fix/src/redux/slices/homeSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst homeSlice = createSlice({\n    name: 'home',\n    initialState: {\n        settingsOpen: true,\n        settingsDevice: 'desktop',\n        meshStatus: ['generating'],\n        displayMode: true,\n        prompt: '',\n        meshID: 0,\n        modelDisplay: true,\n        density: 1024,\n        resolution: 32,\n    },\n    reducers: {\n            UPDATE_PROMPT: (state, action) => {\n                state.prompt = action.payload;\n            },\n            SETTINGS_TOGGLE: (state) => {\n                state.settingsOpen = !state.settingsOpen;\n            },\n            SET_MESHID: (state, action) => {\n                state.meshID = action.payload;\n            },\n            MODEL_DISPLAY_TOGGLE: (state) => {\n                state.modelDisplay = !state.modelDisplay;\n            },\n            UPDATE_DENSITY: (state, action) => {\n                state.density = action.payload;\n            },\n            UPDATE_RESOLUTION: (state, action) => {\n                state.resolution = action.payload;\n            },\n            TOGGLE_SETTINGS: (state, action) => {\n                state.settingsDevice = action.payload;\n            },\n            TOGGLE_DISPLAY_MODE: (state, action) => {\n                state.displayMode = action.payload;\n            },\n            CLEAR_MESH_STATUS: (state) => {\n                state.meshStatus = ['generating'];\n            },\n            ADD_MESH_STATUS: (state, action) => {\n                state.meshStatus = [...state.meshStatus, action.payload];\n            }\n    }\n});\n\nexport const {SETTINGS_TOGGLE, UPDATE_PROMPT, CLEAR_MESH_STATUS, SET_MESHID, ADD_MESH_STATUS, TOGGLE_DISPLAY_MODE, MODEL_DISPLAY_TOGGLE, UPDATE_DENSITY, UPDATE_RESOLUTION, TOGGLE_SETTINGS} = homeSlice.actions;\nexport default homeSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,YAAY,EAAE,IAAI;IAClBC,cAAc,EAAE,SAAS;IACzBC,UAAU,EAAE,CAAC,YAAY,CAAC;IAC1BC,WAAW,EAAE,IAAI;IACjBC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE,IAAI;IAClBC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACFC,aAAa,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,eAAe,EAAGH,KAAK,IAAK;MACxBA,KAAK,CAACX,YAAY,GAAG,CAACW,KAAK,CAACX,YAAY;IAC5C,CAAC;IACDe,UAAU,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACN,MAAM,GAAGO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDG,oBAAoB,EAAGL,KAAK,IAAK;MAC7BA,KAAK,CAACL,YAAY,GAAG,CAACK,KAAK,CAACL,YAAY;IAC5C,CAAC;IACDW,cAAc,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,OAAO,GAAGK,MAAM,CAACC,OAAO;IAClC,CAAC;IACDK,iBAAiB,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACC,OAAO;IACrC,CAAC;IACDM,eAAe,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACV,cAAc,GAAGW,MAAM,CAACC,OAAO;IACzC,CAAC;IACDO,mBAAmB,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO;IACtC,CAAC;IACDQ,iBAAiB,EAAGV,KAAK,IAAK;MAC1BA,KAAK,CAACT,UAAU,GAAG,CAAC,YAAY,CAAC;IACrC,CAAC;IACDoB,eAAe,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACT,UAAU,GAAG,CAAC,GAAGS,KAAK,CAACT,UAAU,EAAEU,MAAM,CAACC,OAAO,CAAC;IAC5D;EACR;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACC,eAAe;EAAEJ,aAAa;EAAEW,iBAAiB;EAAEN,UAAU;EAAEO,eAAe;EAAEF,mBAAmB;EAAEJ,oBAAoB;EAAEC,cAAc;EAAEC,iBAAiB;EAAEC;AAAe,CAAC,GAAGtB,SAAS,CAAC0B,OAAO;AAChN,eAAe1B,SAAS,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}